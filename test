package server

import (
	// "io"
	"net/http"
	"os"
	"log"
	"fmt"
	// "time"
	// "syscall"
	// "context"
	// "os/signal"
)


func StartServer() {
	// Endpoints
	http.HandleFunc("/cwf/get/", handleStdout)
	http.HandleFunc("/cwf/copy/{file}", handleStdin)
	http.HandleFunc("/cwf/clear/{file}", handleClear)

	log.Fatal(http.ListenAndServe(":8787", nil))
}


func handleStdout(w http.ResponseWriter, r *http.Request) {
	if (r.URL.Path != "/cwf/get/") {
		fmt.Fprintf(w, "Invalid endpoint!")
	}

	file := r.URL.Query().Get("file")
	if (file == "") {
		fmt.Fprintf(w, "No file name or path provided!")
	}

	content, err := os.ReadFile(file)

	if (err != nil) {
		fmt.Fprintf(w, "File not found!")
	}

	fmt.Println("Requested file:", file)
	fmt.Println("Content:", string(content))
}


func handleStdin(http.ResponseWriter, *http.Request) {
	fmt.Println("Put something in")
}


func handleClear(http.ResponseWriter, *http.Request) {
	fmt.Println("Clearing...")
}
